"""
    @Author  : Piyus Gupta
    @email   : PiyusGupta01@gmail.com
    @created : Feb 5, 2017

    ProjectEuler Q-12 : highly divisible triangular number

    The sequence of triangle numbers is generated by adding the natural numbers.
    So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
     The first ten terms would be:
        1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

    Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

    We can see that 28 is the first triangle number to have over five divisors.

    What is the value of the first triangle number to have over five hundred divisors?

    ref : https://projecteuler.net/problem=12

    e.g.
    >>> time python q12_highly_divisible_triangular_number.py
    Enter no of divisors to check : 10
    First number with 10 divisor is 120

    real    0m1.576s
    user    0m0.008s
    sys     0m0.008s
    >>> time python q12_highly_divisible_triangular_number.py
    Enter no of divisors to check : 100
    First number with 100 divisor is 73920

    real    0m2.948s
    user    0m0.010s
    sys     0m0.011s
    >>> time python q12_highly_divisible_triangular_number.py
    Enter no of divisors to check : 500
    First number with 500 divisor is 76576500

    real    0m5.568s
    user    0m3.376s
    sys     0m0.020s
    >>> time python q12_highly_divisible_triangular_number.py
    Enter no of divisors to check : 1000
    First number with 1000 divisor is 842161320

    real    0m37.801s
    user    0m35.890s
    sys     0m0.076s
"""


def get_divisor_count(n):
    _count = 0
    for x in xrange(1, int(n ** 0.5) + 1):
        if n % x == 0:
            _count += 1
    return 2 * _count - 1 if x * x == n else 2 * _count


def find_N_divisor(N):
    triangular_number = lambda n: n * (n + 1) / 2
    n = 1
    while True:
        _triangular_number = triangular_number(n)
        divisor_count = get_divisor_count(_triangular_number)
        if divisor_count >= N:
            return _triangular_number
        n += 1

if __name__ == '__main__':
    N = input("Enter no of divisors to check : ")
    _triangular_number = find_N_divisor(N)
    print "First number with %d divisor is %d" % (N, _triangular_number)
